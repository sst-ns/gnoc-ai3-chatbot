var n=this&&this.__awaiter||function(n,t,i,e){return new(i||(i=Promise))((function(o,c){function r(n){try{a(e.next(n))}catch(n){c(n)}}function u(n){try{a(e.throw(n))}catch(n){c(n)}}function a(n){var t;n.done?o(n.value):(t=n.value,t instanceof i?t:new i((function(n){n(t)}))).then(r,u)}a((e=e.apply(n,t||[])).next())}))};const t={auth:{clientId:"{{CLIENT_ID}}",redirectUri:"https://{{DOMAIN}}/",authority:"https://login.microsoftonline.com/{{AUTHORITY}}"}},i=new msal.PublicClientApplication(t),e={loginHint:"default",scopes:["openid"]};i.initialize().then((()=>{i.handleRedirectPromise().then(c).catch((n=>{}))}));const o={scopes:["openid"]};function c(t){return n(this,void 0,void 0,(function*(){if(window.parent===window)if(null!==t){e.loginHint=t.account.username;const n=yield r(o,t.account);u(n.idToken)}else try{yield i.ssoSilent(e);const n=i.getAllAccounts();e.loginHint=n[0].username;const t=yield r(o,n[0]);u(t.idToken)}catch(n){return i.loginRedirect(o)}}))}function r(t,e){return n(this,void 0,void 0,(function*(){return t.account=e,yield i.acquireTokenSilent(t).catch((e=>n(this,void 0,void 0,(function*(){e instanceof msal.InteractionRequiredAuthError&&i.acquireTokenRedirect(t)}))))}))}const u=function(n){const t=new XMLHttpRequest;t.onload=function(){200==t.status&&location.reload()},t.onerror=function(){},t.onabort=function(){},t.open("GET","{{PATH}}"),t.setRequestHeader("{{HEADER}}",n),t.send()};